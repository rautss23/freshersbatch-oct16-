
saraut@LIN51006593 MINGW64 ~
$ mkdir project_dir
c
saraut@LIN51006593 MINGW64 ~
$ cd project_dir

saraut@LIN51006593 MINGW64 ~/project_dir
$ git init
Initialized empty Git repository in C:/Users/saraut/project_dir/.git/

saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        index.html

nothing added to commit but untracked files present (use "git add" to track)

saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ git add index.html

saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ git commit -m "first commit"
[master (root-commit) 52fb569] first commit
 1 file changed, 7 insertions(+)
 create mode 100644 index.html

saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        info.txt

no changes added to commit (use "git add" and/or "git commit -a")

saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ touch .gitignore

saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore

no changes added to commit (use "git add" and/or "git commit -a")

saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ git add index.html

saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ git commit -m "second commit"
[master 63a188f] second commit
 1 file changed, 1 deletion(-)

saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore

nothing added to commit but untracked files present (use "git add" to track)

saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ git log
commit 63a188f995e006e9660584ae05ddbcadb0b89bee (HEAD -> master)
Author: SAURABH RAUt <saurabhssr23@gmail.com>
Date:   Thu Jun 9 14:25:37 2022 +0530

    second commit

commit 52fb56918e4f405eafbb41bfc2ed72fb7abe8a49
Author: SAURABH RAUt <saurabhssr23@gmail.com>
Date:   Thu Jun 9 14:22:41 2022 +0530

    first commit

saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ git add index.html

saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ git revert index.html
fatal: bad revision 'index.html'

saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ git revert
usage: git revert [<options>] <commit-ish>...
   or: git revert <subcommand>

    --quit                end revert or cherry-pick sequence
    --continue            resume revert or cherry-pick sequence
    --abort               cancel revert or cherry-pick sequence
    --skip                skip current commit and continue
    --cleanup <mode>      how to strip spaces and #comments from message
    -n, --no-commit       don't automatically commit
    -e, --edit            edit the commit message
    -s, --signoff         add a Signed-off-by trailer
    -m, --mainline <parent-number>
                          select mainline parent
    --rerere-autoupdate   update the index with reused conflict resolution if possible
    --strategy <strategy>
                          merge strategy
    -X, --strategy-option <option>
                          option for merge strategy
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit


saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   index.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore


saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ git restore --staged index.html

saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore

no changes added to commit (use "git add" and/or "git commit -a")

saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ git checkout --index.html
error: unknown option `index.html'
usage: git checkout [<options>] <branch>
   or: git checkout [<options>] [<branch>] -- <file>...

    -b <branch>           create and checkout a new branch
    -B <branch>           create/reset and checkout a branch
    -l                    create reflog for new branch
    --guess               second guess 'git checkout <no-such-branch>' (default)
    --overlay             use overlay mode (default)
    -q, --quiet           suppress progress reporting
    --recurse-submodules[=<checkout>]
                          control recursive updating of submodules
    --progress            force progress reporting
    -m, --merge           perform a 3-way merge with the new branch
    --conflict <style>    conflict style (merge, diff3, or zdiff3)
    -d, --detach          detach HEAD at named commit
    -t, --track[=(direct|inherit)]
                          set branch tracking configuration
    -f, --force           force checkout (throw away local modifications)
    --orphan <new-branch>
                          new unparented branch
    --overwrite-ignore    update ignored files (default)
    --ignore-other-worktrees
                          do not check if another worktree is holding the given ref
    -2, --ours            checkout our version for unmerged files
    -3, --theirs          checkout their version for unmerged files
    -p, --patch           select hunks interactively
    --ignore-skip-worktree-bits
                          do not limit pathspecs to sparse entries only
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character


saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ git checkout -- index.html

saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore

no changes added to commit (use "git add" and/or "git commit -a")

saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ git checkout -- index.html

saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore

nothing added to commit but untracked files present (use "git add" to track)

saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ git config --global alias.my_add add
error: invalid key: alias.my_add

saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ git add .gitignore

saraut@LIN51006593 MINGW64 ~/project_dir (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   .gitignore

